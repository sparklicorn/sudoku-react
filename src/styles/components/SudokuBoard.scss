@use "sass:math";

@mixin shades($name, $prop, $numShades, $redStart, $redEnd, $greenStart, $greenEnd, $blueStart, $blueEnd) {
  @for $n from 1 through $numShades {
    &.#{$name}-#{$n} {
      #{$prop}: rgb(
        $redStart + math.div(($redEnd - $redStart), $numShades) * ($n - 1),
        $greenStart +  math.div(($greenEnd - $greenStart), $numShades) * ($n - 1),
        $blueStart +  math.div(($blueEnd - $blueStart), $numShades) * ($n - 1)
      );
    }
  }
}

.SudokuBoard {
  > table {
    font: xx-large monospace;
    border-collapse: collapse;
    text-align: center;
    user-select: none;

    > colgroup {
      border: solid medium;
    }

    > tbody > tr {
      &:nth-child(3n) {
        border-bottom: solid medium;
      }

      > td {
        width: 36px;
        height: 36px;
        padding: 0;
        border: solid thin;

        > .cellBtn {
          width: 100%;
          height: 100%;
          border: none;
          overflow: hidden;
          background-color: white;
          vertical-align: top;

          &:hover {
            background-color: #ffffaaaa;
          }

          &.locked {
            background-color: #ddd;
            font-weight: 600;

            &.selected {
              background-color: #cccc00cc;
            }
          }

          &.selected {
            background-color: #ffffaaaa;
          }

          &.invalid {
            background-color: #ffaaaaaa;
            color: #a00;

            &.locked {
              background-color: #ddd;
            }

            &.selected {
              background-color: #cccc00cc;
            }
          }
        }
      }
    }
  }
}
